/*
 * generated by Xtext 2.12.0
 */
package x.buglang.jvmmodel

import static x.buglang.tests.AssertText.*

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import x.buglang.bugsly.File
import org.eclipse.xtext.xbase.compiler.JvmModelGenerator
import org.eclipse.xtext.common.types.JvmGenericType
import org.eclipse.xtext.xbase.compiler.GeneratorConfig

@RunWith(XtextRunner)
@InjectWith(x.buglang.tests.BugslyInjectorProvider)
class BugslyJvmModelInferrerTest {
	@Inject
	ParseHelper<File> parseHelper
	
	@Inject
	JvmModelGenerator jvmGenerator;
	
	/**
	 * This input works when file Edited in Eclipse instance
	 */
	@Test
	def void testFails_resolvingCaseSensitiveSimpleNameImports() {
		val result = '''
			define Z {
				var a = typeof(Boolean)
				var b = typeof(BOOLEAN)
			}
		'''.toJavaText

		assertText('''
		import x.buglang.lib.other.BOOLEAN;
		
		@SuppressWarnings("all")
		public class Z {
		  private void main() {
		    Class<x.buglang.lib.Boolean> a = x.buglang.lib.Boolean.class;
		    Class<BOOLEAN> b = BOOLEAN.class;
		  }
		}
		''', result)
	}
	
	
	@Test
	def void testPasses_resolvingFullyQualifiedNameImports() {
		val result = '''
			define Z {
				var a = typeof(x.buglang.lib.Boolean)
				var b = typeof(x.buglang.lib.other.BOOLEAN)
			}
		'''.toJavaText

		assertText('''
		import x.buglang.lib.other.BOOLEAN;
		
		@SuppressWarnings("all")
		public class Z {
		  private void main() {
		    Class<x.buglang.lib.Boolean> a = x.buglang.lib.Boolean.class;
		    Class<BOOLEAN> b = BOOLEAN.class;
		  }
		}
		''', result)
	}	
		
	def private toJavaText(CharSequence fileContent) {
		val input = parseHelper.parse(fileContent).eResource
		val obj = input.getContents().get(1);
		switch (obj) {
			JvmGenericType : jvmGenerator.generateType(obj, new GeneratorConfig()).toString
			default : null
		}
	}
}
